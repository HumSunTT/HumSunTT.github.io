[{"title":"Git搭建本地远程仓库","url":"/HumSunTT/HumSunTT.github.io/2021/09/15/Git%E5%AD%A6%E4%B9%A0/","content":"Git学习基础操作git配置本地远程仓库在本地的移动硬盘中创建git远程仓库，将电脑中的数据同步到git仓库中。\n创建远程仓库cd /Volumes/MacOS/mkdir workSpacecd workSpacegit init\n\n关联远程仓库cd &quot;实际工作目录&quot;git init   #初始化git目录git add .  #添加修改至临时缓存区git commit -m &quot;init&quot;  #提交至本地仓库git remote add origin /Volumes/MacOS/workSpace  #关联远程仓库的位置git push -u origin master #向远程仓库提交\n此时会报错\ngit push -u origin masterCounting objects: 4, done.Delta compression using up to 16 threads.Compressing objects: 100% (2/2), done.Writing objects: 100% (4/4), 245 bytes | 0 bytes/s, done.Total 4 (delta 0), reused 0 (delta 0)remote: error: refusing to update checked out branch: refs/heads/masterremote: error: By default, updating the current branch in a non-bare repositoryremote: error: is denied, because it will make the index and work tree inconsistentremote: error: with what you pushed, and will require &#x27;git reset --hard&#x27; to matchremote: error: the work tree to HEAD.remote: error: remote: error: You can set &#x27;receive.denyCurrentBranch&#x27; configuration variable toremote: error: &#x27;ignore&#x27; or &#x27;warn&#x27; in the remote repository to allow pushing intoremote: error: its current branch; however, this is not recommended unless youremote: error: arranged to update its work tree to match what you pushed in someremote: error: other way.remote: error: remote: error: To squelch this message and still keep the default behaviour, setremote: error: &#x27;receive.denyCurrentBranch&#x27; configuration variable to &#x27;refuse&#x27;.To /home/lu/Temp/git_server/Test/ ! [remote rejected] master -&gt; master (branch is currently checked out)error: failed to push some refs to &#x27;/home/lu/Temp/git_server/Test/\n因为我们的远程仓库也只是一般的仓库而不是裸仓库，如果是裸仓库的话就不会出现这个问题了。根据错误提示，我们可以进行相应的配置：\ngit config --global receive.denyCurrentBranch ignore\n也可以直接修改配置文件：\nvim ~/.gitconfig在文件中添加以下内容即可[receive]    denyCurrentBranch = ignore\n配置完后，再push一次。\ngit push -u origin masterCounting objects: 4, done.Delta compression using up to 16 threads.Compressing objects: 100% (2/2), done.Writing objects: 100% (4/4), 245 bytes | 0 bytes/s, done.Total 4 (delta 0), reused 0 (delta 0)To /home/lu/Temp/git_server/Test/ * [new branch]      master -&gt; masterBranch master set up to track remote branch master from origin.\n\n提交上去了，但是目前远程仓库中还看不到提交的数据git status可以看到，但是没有写到磁盘上\n添加git hookgit hook是一个非常强大的功能，它可以监听我们对仓库的修改，继而触发相应的逻辑命令。这里为了完成同事的需求，只说说post-update，就是提交有代码更新到仓库时需要执行的操作。\ncd .git/hooksmv post-update.sample post-updatevim post-update\n修改内容\n#!/bin/sh## An example hook script to prepare a packed repository for use over# dumb transports.## To enable this hook, rename this file to &quot;post-update&quot;.#exec git update-server-infounset GIT_DIRcd ..git checkout -f\n\n修改完成再次push\necho &quot;demo&quot; &gt; demo #修改某些文件git add .git commit -m &quot;add demo&quot;git pushCounting objects: 3, done.Delta compression using up to 16 threads.Compressing objects: 100% (2/2), done.Writing objects: 100% (3/3), 288 bytes | 0 bytes/s, done.Total 3 (delta 0), reused 0 (delta 0)To /home/lu/Temp/git_server/Test/   7be5b2a..9da7116  master -&gt; master\n提交之后可查看移动硬盘中的远程仓库，已经上传成功。\n借助百度网盘实现实时同步下载百度同步网盘MAC版https://pan.baidu.com/download#pan百度网盘新建文件夹GitSpace，用于存放同步数据。本地新建GitSpace，在此文件夹下创建各项目子文件夹及git仓库。选择同步即可。\n","categories":["Git学习"],"tags":["tips"]},{"title":"test","url":"/HumSunTT/HumSunTT.github.io/2021/09/15/test/","content":""},{"title":"Hexo&Github搭建私人博客","url":"/HumSunTT/HumSunTT.github.io/2021/09/15/hexo&github%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E5%8D%9A%E5%AE%A2/","content":"Hexo&amp;Github搭建私人博客1 Hexo介绍Hexo是基于NodeJs的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github和Heroku上。\n\n超快速度\n支持MarkDown\n一键部署\n丰富的插件\n\n\n下面以我的博客为例，humsuntt.github.io\n\n2 环境准备2.1 安装node.js去nodejs官网下载对应系统的安装包，按提示安装。nodejs安装版本要高于V12,否则会出现很多意想不到的错误。\n检验安装成功：\n$ node -v\n\n2.2 安装hexo$ npm install hexo-cli -g\n3 利用Hexo搭建一个博客3.1 创建博客目录humsuntt.github.io$ hexo init humsuntt.github.io$ cd humsuntt.github.io$ npm install\n\n3.2 生成静态页面$ hexo clean$ hexo g\n\ng 即generate\n\n3.3 运行$ hexo s\n\n\ns 即server\n\n然后打开浏览器，输入地址 localhost:4000 即可看到效果\n4 发一篇文章试试4.1 命令方式$ hexo new test\n\n此时会在source/_posts目录下生成test.md文件，输入些许内容，然后保存.\n生成下，看看效果\n$ hexo clean$ hexo g$ hexo s\n\n访问 localhost:4000 即可\n4.2 直接方式在 source/_posts 下新建一个.md文件也可\n5 配置网站的设置大部分都在_config.yml文件中，详细配置可以查看官方文档\n下面只列出简单常用配置\n\ntitle -&gt; 网站标题\nsubtitle -&gt; 网站副标题\ndescription -&gt; 网站描述\nauthor -&gt; 您的名字\nlanguage -&gt; 网站使用的语言\n\n坑：进行配置时，需要在冒号:后加一个英文空格\ntitle: Hero&#x27;s wings\n\n6 换一个好看的主题Hexo 中有很多主题，可以在官网查看。这里我推荐hexo-theme-next，下面列举更换主题的一般套路：\n6.1 下载主题资源$ git clone https://github.com/iissnan/hexo-theme-next themes/next\ngit无法克隆的话，可以直接下载主题压缩包，解压后在theme目录下新建next文件夹，将整个主题文件放进去即可。\n6.2 应用下载的主题在网站配置文件_config.yml中，配置theme\ntheme: next\n\n\nnext是主题名称，具体的可查看主题的文档\n\n6.3 主题其他配置可在/theme/&#123;theme&#125;/_config.yml 主题的配置文件下进行主题的配置。\n接下来，可以执行万能的调试命令看看效果\n$ hexo clean$ hexo g$ hexo s\n\n7 部署到Github7.1 有个github账号xxx7.2 创建一个xxx.github.io的public仓库如果您的账户名是humsuntt,则需要创建一个humsuntt.github.io的public仓库.\n7.3 安装 hexo-deployer-git$ npm install hexo-deployer-git --save\n\n7.4 网站配置git在网站的_config.yml中配置deploy\ndeploy:  type: git  repo: https://github.com/HumSunTT/HumSunTT.github.io  branch: main\n\n\nbranch为分支，设置为main\n\n\nrepo为仓库地址\n\n7.5 部署$ hexo clean &amp;&amp; hexo deploy\n\n\nd 即deploy\n\n8 贴标签，方便搜索8.1 两个确认\n确认站点配置文件有 tag_dir: tags\n确认主题配置文件有tags: tags\n\n8.2 新建tags页面$ hexo new page tags\n此时会在source/下生成tags/index.md文件\n8.3 修改source/tags/index.mdtitle: tagsdate: 2015-10-20 06:49:50type: &quot;tags&quot;comments: false\n\n\ndate 可保持系统生成的时间，\n\ntype: &quot;tags&quot;comments: false\n很重要\n8.4 在文章中添加tags在文章xx.md中添加：\ntags: \t- Tag1\t- Tag2\t- Tag3\n\n多个Tag可按上面的格式添加。\n其文件头部类似：\ntitle: TagEditTextdate: 2016-11-19 10:44:25tags: \t- Tag1\t- Tag2\t- Tag3\n\n\n\n9 分类，给文章归档9.1 两个确认\n确认站点配置文件打开了category_dir: categories\n确认主题配置文件打开了categories: /categories\n\n9.2 新建categories文件$ hexo new page categories\n\n此时会在source目录下生成categories/index.md文件\n9.3 修改categories/index.mdtitle: categoriesdate: 2015-10-20 06:49:50type: &quot;categories&quot;comments: false\n\n\ndate 可保持系统生成的时间，\n\ntype: &quot;categories&quot;comments: false\n很重要\n9.4 在文章中添加categories在文章xx.md中添加：\ncategories: \t- cate\n\n其文件头部类似：\ntitle: TagEditTextdate: 2016-11-19 10:44:25categories: \t- cate\n\n10 添加评论功能评论功能在国内一般使用多说。\n10.1 注册多说账号10.2 创建站点需要注意的是，填写的多说域名不能更改，会在后面使用，在这里我配置成droidlover\n10.3 配置在hexo主题配置文件中搜索：\nduoshuo_shortname\n，然后打开开关，配置成前面设置的多说域名，如下：\nduoshuo_shortname: droidlover\n\n有时，可能需要一段js\n&lt;!-- 多说评论框 start --&gt;\t&lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;请将此处替换成文章在你的站点中的ID&quot; data-title=&quot;请替换成文章的标题&quot; data-url=&quot;请替换成文章的网址&quot;&gt;&lt;/div&gt;&lt;!-- 多说评论框 end --&gt;&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;&lt;script type=&quot;text/javascript&quot;&gt;var duoshuoQuery = &#123;short_name:&quot;droidlover&quot;&#125;;\t(function() &#123;\t\tvar ds = document.createElement(&#x27;script&#x27;);\t\tds.type = &#x27;text/javascript&#x27;;ds.async = true;\t\tds.src = (document.location.protocol == &#x27;https:&#x27; ? &#x27;https:&#x27; : &#x27;http:&#x27;) + &#x27;//static.duoshuo.com/embed.js&#x27;;\t\tds.charset = &#x27;UTF-8&#x27;;\t\t(document.getElementsByTagName(&#x27;head&#x27;)[0] \t\t || document.getElementsByTagName(&#x27;body&#x27;)[0]).appendChild(ds);\t&#125;)();\t&lt;/script&gt;&lt;!-- 多说公共JS代码 end --&gt;\n\n现在，你可以运行看下效果了:)\n11 加介绍页面，让全世界认识你","categories":["Git学习"],"tags":["tips"]},{"title":"Hello World","url":"/HumSunTT/HumSunTT.github.io/2021/09/15/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"}]